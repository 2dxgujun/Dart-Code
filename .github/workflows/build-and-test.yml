name: Run Tests

on: [push, pull_request]

jobs:
  build:

    name: "${{ matrix.bot }} (${{ matrix.dart-version }}/${{ matrix.code-version }}/${{ matrix.os }})"
    runs-on: ${{ matrix.os }}
    # We want to run on external PRs, but not on our own internal PRs as they'll be run
    # by the push to the branch.
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository

    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        node-version: [10]
        build-version: [dev]
        bot: [flutter_debug_chrome]
        include:
          - build-version: dev
            dart-version: dev
            flutter-version: dev
            code-version: insiders

    steps:

      - uses: actions/checkout@v1

      - name: Setup XVFB
        if: matrix.os == 'ubuntu-latest'
        run: Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &

      - name: Setup Node v${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup Dart ${{ matrix.dart-version }}
        if: matrix.bot != 'flutter_snap'
        uses: DanTup/gh-actions/setup-dart@v1.0.0
        with:
          channel: ${{ matrix.dart-version }}

      - name: Setup Flutter ${{ matrix.flutter-version }}
        id: flutter
        if: matrix.bot != 'flutter_snap' && !startsWith(matrix.bot, 'dart')
        uses: DanTup/gh-actions/setup-flutter@v1.0.0
        with:
          channel: ${{ matrix.flutter-version }}

      - run: sudo snap install flutter --classic
        if: matrix.bot == 'flutter_snap'

      - run: flutter update-packages
        if: matrix.bot == 'flutter_repo'

      - name: Print Dart version
        if: matrix.bot != 'flutter_snap'
        run: dart --version

      - name: Print Flutter version
        if: matrix.bot != 'flutter_snap' && !startsWith(matrix.bot, 'dart')
        run: flutter --version

      - name: Enable Flutter web support
        if: startsWith(matrix.bot, 'flutter') && matrix.bot != 'flutter_snap'
        run: flutter config --enable-web

      - run: |
          pub global activate --no-executables devtools
          pub global activate --no-executables webdev
          pub global activate --no-executables stagehand
          pub global activate --no-executables args 1.5.0
          pub global activate --no-executables meta 1.1.6
          pub global activate --no-executables pedantic 1.4.0
          pub global activate --no-executables json_annotation 1.2.0
        if: matrix.bot != 'flutter_snap'
        shell: pwsh

      - name: npm install
        run: npm install

      - name: npm lint
        run: npm run lint

      - name: npm build
        run: npm run build

      - name: pub get (hello_world)
        if: startsWith(matrix.bot, 'dart')
        run: pub get
        working-directory: src/test/test_projects/hello_world

      - name: flutter pub get (flutter_hello_world)
        if: startsWith(matrix.bot, 'flutter') && matrix.bot != 'flutter_snap'
        run: flutter packages get
        working-directory: src/test/test_projects/flutter_hello_world

      - name: npm test
        run: npm test
        env:
          CI: true
          ELECTRON_NO_ATTACH_CONSOLE: 1
          DISPLAY: ":99.0"
          BOT: ${{ matrix.bot }}
          CODE_VERSION: ${{ matrix.code-version }}
          DART_VERSION: ${{ matrix.dart-version }}
          FLUTTER_VERSION: ${{ matrix.flutter-version }}
          LOGS_NAME: ${{ matrix.dart-version }}_${{ matrix.code-version }}
          FLUTTER_REPO_PATH: ${{ steps.flutter.outputs.flutter-sdk }}

      - name: Store logs
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: test-logs-${{ matrix.os }}
          path: .dart_code_test_logs

      - name: Store test results
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: test-results-${{ matrix.os }}
          path: .test_results

      - name: Store coverage
        uses: actions/upload-artifact@v1
        if: success() && matrix.dart-version == 'stable' && matrix.code-version == 'stable'
        with:
          name: coverage-${{ matrix.os }}
          path: coverage
